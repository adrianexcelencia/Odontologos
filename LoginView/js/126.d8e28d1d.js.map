{"version":3,"file":"js/126.d8e28d1d.js","mappings":"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","sources":["webpack://prueba/./src/views/ManagerModulesView.vue","webpack://prueba/./src/views/ManagerModulesView.vue?2390"],"sourcesContent":["<template>\n  <barra-navegacion></barra-navegacion>\n  \n  <spinner :visible=\"MostrarSpinner\"></spinner>\n  \n  <div class=\"container-sm\">\n  <div v-if=\"!MostrarSpinner\">\n    <form @submit.prevent=\"obtenerValores\">\n      <div id=\"ContenedorDeCampos\">\n        <div class=\"form-group\">\n          <div class=\"card border border-2  mx-auto mb-2 bg-white p-2\" style=\"max-width: 98%; margin-bottom: 1%; margin-top: 1%\" >\n    \n          <div v-for=\"formulario of daform\" :key=\"formulario.idConfigForm\">\n            <div class=\"col p-1 \">\n             <b> {{ formulario.titulo }} </b> {{ formulario.descripcion }} \n              \n            </div>\n          </div>\n        </div>\n        <div class=\"card border border-2  mx-auto   shadow-lg mb-2 bg-white p-3\" style=\"max-width: 98%; margin-bottom: 1%; margin-top: 1%\" >\n    \n          <div class=\"row\">\n          <div v-for=\"campos of dafield\" :key=\"campos.id_Field\" :class=\"campos.posi\">\n            <label class=\"badge bg-secondary\" :for=\"campos.nombre\">{{ campos.etiqueta }}</label>\n            <!-- Si el tipo es \"select\", renderiza un select -->\n            <select :v-model=\"campos.nombre\" v-if=\"campos.tipo === 'select'\"   :class=\"campos.clase\"\n        :required=\"campos.requerido\" :identificador=\"campos.id_Field\">\n        <option value=\"\">Selecciona una opción </option>\n        <option v-for=\"Combo in this[campos.opciones.trim()]\" :value=\"Combo.codigo\">{{Combo.nombre}}</option>\n      </select> \n            <!--\n            <select v-if=\"campos.tipo === 'select'\" :name=\"campos.nombre\" :class=\"campos.clase\"\n              :required=\"campos.requerido\" :identificador=\"campos.id_Field\">\n              <option v-for=\"opcion in campos.opciones ? campos.opciones.split(',') : []\" :value=\"opcion.trim()\">{{\n                opcion.trim() }}</option>\n            </select>\n            -->\n            <!-- Si el tipo es text renderiz aun area de texto -->\n            <textarea v-else-if=\"campos.tipo === 'textarea'\"\n            :name=\"campos.nombre\"\n            :class=\"campos.clase\"\n            :required=\"campos.requerido\"\n            :identificador=\"campos.id_Field\">\n            </textarea>\n            <!-- Si el tipo es checkbox, renderiza una casilla de verificación -->\n            <input type=\"checkbox\" v-else-if=\"campos.tipo === 'checkbox'\" \n            :name=\"campos.nombre\"\n            :class=\"form-check\"\n            :required=\"campos.requerido\"\n            :identificador=\"campos.id_Field\">\n            <!-- Si no, renderiza los demas tipos de input -->\n            <v-text-field v-else :type=\"campos.tipo\" :placeholder=\"campos.marcador\"  :name=\"campos.nombre\"\n              :required=\"campos.requerido\" :identificador=\"campos.id_Field\" variant=\"underlined\"></v-text-field>\n          </div>\n        </div>\n      </div>\n\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <div class=\"col  p-3 text-center\">\n            <button type=\"submit\" class=\"btn btn-success btn-sm\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-floppy-fill\"\n                viewBox=\"0 0 16 16\">\n                <path\n                  d=\"M0 1.5A1.5 1.5 0 0 1 1.5 0H3v5.5A1.5 1.5 0 0 0 4.5 7h7A1.5 1.5 0 0 0 13 5.5V0h.086a1.5 1.5 0 0 1 1.06.44l1.415 1.414A1.5 1.5 0 0 1 16 2.914V14.5a1.5 1.5 0 0 1-1.5 1.5H14v-5.5A1.5 1.5 0 0 0 12.5 9h-9A1.5 1.5 0 0 0 2 10.5V16h-.5A1.5 1.5 0 0 1 0 14.5v-13Z\" />\n                <path\n                  d=\"M3 16h10v-5.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5V16Zm9-16H4v5.5a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5V0ZM9 1h2v4H9V1Z\" />\n              </svg>\n              Guardar 24</button>\n          </div>\n        </div>\n        <div class=\"col-auto\">\n          <div class=\"col  p-3 text-center\">\n            <button type=\"reset\" class=\"btn btn-secondary btn-sm\" @click=\"cancelar\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                class=\"bi bi-x-square-fill\" viewBox=\"0 0 16 16\">\n                <path\n                  d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm3.354 4.646L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 1 1 .708-.708z\" />\n              </svg>\n              Cancelar</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n</template>\n\n<script>\nimport BarraNavegacion from '@/components/BarraNavegacion.vue';\nimport Spinner from '@/components/Spinner.vue';\nexport default {\n  name: 'ManagerModulesView',\n  components: {\n    'barra-navegacion': BarraNavegacion,\n    'spinner': Spinner\n  },\n  data: function () {\n    return { daform: [], dafield: [], ListaCombos: [],\n            ListaCombosI:'',\n            ListaCombosII:'', MostrarSpinner: false }\n  },\n  created() {\n    this.fetch();\n    this.MostrarCombo();\n        this.MostrarComboI();\n        this.MostrarComboII();\n        this.MostrarComboIII();\n  },\n  methods: {\n    async fetch() {\n      this.MostrarSpinner = true;\n      const idConfigForm = this.$route.params.idConfigForm;\n      await this.axios.get(`/api/ConfigForm/MostrarFormularioCompleto/${idConfigForm}`)\n        .then((respuesta) => {\n          this.daform = respuesta.data;\n          this.dafield = respuesta.data.datosField;\n          console.log(this.dafield);\n        })\n        .catch(err => {\n          console.log(err);\n        }).finally(() => {\n          //finaliza el spinner\n          // Ocultamos el spinner luego de finalizar la solicitud\n          this.MostrarSpinner = false;\n        });\n    },\n    async MostrarCombo() {\n      \n      //this.MostrarSpinner = true; //abrir spinner mientras realiza la solicitud\n      const respuesta = await this.axios.get(\"/api/ConfigForm/ListaCombo?pTipo=1&pId=2129\")\n        .then((respuesta) => {\n          this.ListaCombos = respuesta.data.lista;\n          \n          console.log(\"Lista Combos ListaCombos\");\n          console.log(this.ListaCombos);\n         \n          //si no hay formularios en la respuesta de la api mostrar mensaje\n          if (this.ListaFormularios.length == 0) {\n            this.NoHayRegistros = true\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        \n            \n      //this.MostrarSpinner = false;//cerrar spinner cuando termine de realizar la solicitud\n    },   \n    async MostrarComboI() {\n      \n      //this.MostrarSpinner = true; //abrir spinner mientras realiza la solicitud\n      const respuesta = await this.axios.get(\"/api/ConfigForm/ListaCombo?pTipo=1&pId=2131\")\n        .then((respuesta) => {\n          this.ListaCombosI = respuesta.data.lista;\n          \n          console.log(\"Lista Combos ListaCombosI\");\n          console.log(this.ListaCombosI);\n         \n          //si no hay formularios en la respuesta de la api mostrar mensaje\n          if (this.ListaFormularios.length == 0) {\n            this.NoHayRegistros = true\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        \n            \n      //this.MostrarSpinner = false;//cerrar spinner cuando termine de realizar la solicitud\n    }, \n    async MostrarComboII() {\n      \n      //this.MostrarSpinner = true; //abrir spinner mientras realiza la solicitud\n      const respuesta = await this.axios.get(\"/api/ConfigForm/ListaCombo?pTipo=1&pId=2130\")\n        .then((respuesta) => {\n          this.ListaCombosII = respuesta.data.lista;\n          \n          console.log(\"Lista Combos ListaCombosI\");\n          console.log(this.ListaCombosII);\n         \n          //si no hay formularios en la respuesta de la api mostrar mensaje\n          if (this.ListaFormularios.length == 0) {\n            this.NoHayRegistros = true\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        \n            \n      //this.MostrarSpinner = false;//cerrar spinner cuando termine de realizar la solicitud\n    }, \n    async MostrarComboIII() {\n      \n      //this.MostrarSpinner = true; //abrir spinner mientras realiza la solicitud\n      const respuesta = await this.axios.get(\"/api/ConfigForm/ListaCombo?pTipo=1&pId=2130\")\n        .then((respuesta) => {\n          this.ListaCombosII = respuesta.data.lista;\n          \n          console.log(\"Lista Combos ListaCombosI\");\n          console.log(this.ListaCombosII);\n         \n          //si no hay formularios en la respuesta de la api mostrar mensaje\n          if (this.ListaFormularios.length == 0) {\n            this.NoHayRegistros = true\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n        \n            \n      //this.MostrarSpinner = false;//cerrar spinner cuando termine de realizar la solicitud\n    }, \n    obtenerValores() {\n\n      // Obtén una referencia al contenedor de campos dinámicos\n      var contenedor = document.getElementById(\"ContenedorDeCampos\");\n\n      // Encuentra todos los elementos de formulario dentro del contenedor\n      var campos = contenedor.querySelectorAll(\"input[type='text'], textarea, input[type='number'], select, input[type='password'], input[type='date'], input[type='time'], input[type='email'], input[type='checkbox']\");\n\n      // Crea un objeto para almacenar los valores\n      var valores = [];\n\n      //recuperar valor del idConfigForm\n      var idConfigForm = this.$route.params.idConfigForm;\n\n      // Recorre los campos y obtén sus valores\n      campos.forEach(function (campo) {\n        valores.push({\n          id_ConfigForm: idConfigForm,  // Puedes ajustar este valor según tus necesidades\n          id_Field: campo.getAttribute(\"identificador\"),  // Utiliza getAttribute para obtener el valor de key\n          valor: campo.value,\n        });\n\n      });\n      //enviar valores a la api\n      // Realiza una solicitud POST a la API para guardar los registros\n      this.axios.post('/api/ConfigForm/Respuestas/Guardar', valores)\n        .then((respuesta) => {\n\n          //redirigir a la grilla dinamica\n          this.$router.push(`/grilla/${idConfigForm}`);\n\n        })\n        .catch(err => {\n          console.log('Error al guardar los registros:', err);\n        });\n\n\n    },\n    cancelar() {\n      // Retrocede en la historia de navegación\n      this.$router.go(-1);\n    }\n  }\n};\n</script>\n","import { render } from \"./ManagerModulesView.vue?vue&type=template&id=6b09a254\"\nimport script from \"./ManagerModulesView.vue?vue&type=script&lang=js\"\nexport * from \"./ManagerModulesView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","id","style","_createElementVNode","value","xmlns","width","height","fill","viewBox","d","_createVNode","_component_barra_navegacion","_component_spinner","visible","_ctx","MostrarSpinner","_hoisted_1","_createElementBlock","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","obtenerValores","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","daform","formulario","key","idConfigForm","_hoisted_6","_toDisplayString","titulo","descripcion","_hoisted_7","_hoisted_8","dafield","campos","id_Field","_normalizeClass","posi","for","nombre","etiqueta","_hoisted_9","tipo","clase","required","requerido","identificador","_hoisted_11","opciones","trim","Combo","codigo","_hoisted_12","name","_hoisted_13","type","form","check","_createBlock","_component_v_text_field","placeholder","marcador","variant","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","onClick","cancelar","_hoisted_19","components","BarraNavegacion","Spinner","data","ListaCombos","ListaCombosI","ListaCombosII","created","this","fetch","MostrarCombo","MostrarComboI","MostrarComboII","MostrarComboIII","methods","$route","params","axios","get","then","respuesta","datosField","console","log","catch","err","finally","lista","ListaFormularios","length","NoHayRegistros","contenedor","document","getElementById","querySelectorAll","valores","forEach","campo","push","id_ConfigForm","getAttribute","valor","post","$router","go","__exports__","render"],"sourceRoot":""}